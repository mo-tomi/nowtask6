# Generate ALLCODE.txt with all HTML, CSS, and JS files in Markdown format

$outputFile = "ALLCODE.txt"
$assetsPath = "android-app/app/src/main/assets"

# Create output file with UTF-8 BOM
$utf8Bom = New-Object System.Text.UTF8Encoding $true
$writer = [System.IO.StreamWriter]::new($outputFile, $false, $utf8Bom)

# Header
$writer.WriteLine("# nowtask Android App - Complete Source Code")
$writer.WriteLine("")
$writer.WriteLine("**Generated Date**: $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')")
$writer.WriteLine("**Format**: Markdown")
$writer.WriteLine("**Purpose**: Complete codebase documentation")
$writer.WriteLine("")
$writer.WriteLine("---")
$writer.WriteLine("")

# Table of Contents
$writer.WriteLine("## Table of Contents")
$writer.WriteLine("")
$writer.WriteLine("1. [HTML](#html)")
$writer.WriteLine("2. [CSS Modules](#css-modules)")
$writer.WriteLine("3. [JavaScript Modules](#javascript-modules)")
$writer.WriteLine("")
$writer.WriteLine("---")
$writer.WriteLine("")

# HTML Section
$writer.WriteLine("## HTML")
$writer.WriteLine("")
$htmlFile = Join-Path $assetsPath "index.html"
if (Test-Path $htmlFile) {
    $writer.WriteLine("### index.html")
    $writer.WriteLine("")
    $writer.WriteLine('```html')
    Get-Content $htmlFile -Encoding UTF8 | ForEach-Object { $writer.WriteLine($_) }
    $writer.WriteLine('```')
    $writer.WriteLine("")
}

# CSS Modules Section
$writer.WriteLine("---")
$writer.WriteLine("")
$writer.WriteLine("## CSS Modules")
$writer.WriteLine("")

$cssPath = Join-Path $assetsPath "css"
$cssFiles = Get-ChildItem $cssPath -Filter "*.css" | Sort-Object Name

foreach ($cssFile in $cssFiles) {
    $writer.WriteLine("### $($cssFile.Name)")
    $writer.WriteLine("")
    $writer.WriteLine('```css')
    Get-Content $cssFile.FullName -Encoding UTF8 | ForEach-Object { $writer.WriteLine($_) }
    $writer.WriteLine('```')
    $writer.WriteLine("")
}

# JavaScript Modules Section
$writer.WriteLine("---")
$writer.WriteLine("")
$writer.WriteLine("## JavaScript Modules")
$writer.WriteLine("")

$jsPath = Join-Path $assetsPath "js"
$jsFiles = Get-ChildItem $jsPath -Filter "*.js" | Where-Object { $_.DirectoryName -notmatch "OLD_RENDER_SPLIT" } | Sort-Object Name

foreach ($jsFile in $jsFiles) {
    $writer.WriteLine("### $($jsFile.Name)")
    $writer.WriteLine("")
    $writer.WriteLine('```javascript')
    Get-Content $jsFile.FullName -Encoding UTF8 | ForEach-Object { $writer.WriteLine($_) }
    $writer.WriteLine('```')
    $writer.WriteLine("")
}

# Footer
$writer.WriteLine("---")
$writer.WriteLine("")
$writer.WriteLine("**End of Document**")
$writer.WriteLine("")
$writer.WriteLine("Generated by PowerShell script")
$writer.WriteLine("Total files processed:")
$writer.WriteLine("- HTML: 1 file")
$writer.WriteLine("- CSS: $($cssFiles.Count) files")
$writer.WriteLine("- JavaScript: $($jsFiles.Count) files")

$writer.Close()

Write-Host "ALLCODE.txt generated successfully!" -ForegroundColor Green
Write-Host "Location: $(Resolve-Path $outputFile)" -ForegroundColor Cyan
Write-Host "File size: $((Get-Item $outputFile).Length / 1MB) MB" -ForegroundColor Yellow
